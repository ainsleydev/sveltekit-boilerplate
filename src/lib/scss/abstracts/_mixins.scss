// -----------------------------------------------------------------------------
// _mixins.scss
// This file contains all mixin's for use with scss files.
// -----------------------------------------------------------------------------

@use 'sass:math';

// Breakpoint Mixins
// ==========================================================================

// Up
@mixin media-mob {
	@media (min-width: $grid-breakpoint-mob * 1px) {
		@content;
	}
}

@mixin media-tab {
	@media (min-width: $grid-breakpoint-tab * 1px) {
		@content;
	}
}

@mixin media-desk {
	@media (min-width: $grid-breakpoint-desk * 1px) {
		@content;
	}
}

@mixin media-desk-large {
	@media (min-width: $grid-breakpoint-desk-large * 1px) {
		@content;
	}
}

@mixin media-hd {
	@media (min-width: $grid-breakpoint-hd * 1px) {
		@content;
	}
}

// Down
@mixin media-mob-down {
	@media (max-width: $grid-breakpoint-mob - 1 * 1px) {
		@content;
	}
}

@mixin media-tab-down {
	@media (max-width: $grid-breakpoint-tab - 1 * 1px) {
		@content;
	}
}

@mixin media-desk-down {
	@media (max-width: $grid-breakpoint-desk - 1 * 1px) {
		@content;
	}
}

@mixin media-desk-large-down {
	@media (max-width: $grid-breakpoint-desk-large - 1 * 1px) {
		@content;
	}
}

@mixin media-hd-down {
	@media (max-width: $grid-breakpoint-hd - 1 * 1px) {
		@content;
	}
}

// Only
@mixin media-mob-only {
	@media (min-width: $grid-breakpoint-mob * 1px) and (max-width: $grid-breakpoint-mob * 1px -1px) {
		@content;
	}
}

@mixin media-tab-only {
	@media (min-width: $grid-breakpoint-tab * 1px) and (max-width: $grid-breakpoint-desk * 1px - 1px) {
		@content;
	}
}

@mixin media-desk-only {
	@media (min-width: $grid-breakpoint-desk * 1px) and (max-width: $grid-breakpoint-desk-large * 1px - 1px) {
		@content;
	}
}

@mixin media-desk-large-only {
	@media (min-width: $grid-breakpoint-desk-large * 1px) and (max-width: $grid-breakpoint-hd * 1px - 1px) {
		@content;
	}
}

// Mods
@mixin media-landscape {
	@media screen and (orientation: landscape) and (min-width: $grid-breakpoint-mob * 1px) {
		@content;
	}
}

@mixin media-portrait {
	@media screen and (orientation: portrait) and (max-width: $grid-breakpoint-tab * 1px) {
		@content;
	}
}

// Small Phones
// ==========================================================================

@mixin media-small-phones {
	@media (width <= 350px) {
		@content;
	}
}

// Pixel to REM Converter
// ==========================================================================

// @author Ainsley Clark
// @param {Number} $pxValue - Pixel amount to convert
// @param {String} $property [font-size] - Property to convert
// @param {Number} $standard-size - Initial base rem size
@mixin px-to-rem($pxValue, $property: 'font-size', $standard-size: 16) {
	#{$property}: $pxValue + px;
	#{$property}: $pxValue / Ã¥$standard-size + rem;
}

// Event Wrapper
// ==========================================================================

// @author Harry Roberts
// @param {Bool} $self [false] - Whether or not to include current selector
// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
	@if $self {
		&,
		&:hover,
		&:active,
		&:focus {
			@content;
		}
	} @else {
		&:hover,
		&:active,
		&:focus {
			@content;
		}
	}
}

// Full Height
// ==========================================================================

@mixin full-height {
	height: 100vh; /* Use vh as a fallback for browsers that do not support Custom Properties */
	height: 100svh;
}

// Fluid Type
// ==========================================================================

@function strip-unit($value) {
	@return math.div($value, $value * 0 + 1);
}

// Usage:
// @include fluid-type(320px, 1408px, 34px, 98px);
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		& {
			font-size: $min-font-size;

			@media screen and (min-width: $min-vw) {
				font-size: calc(
					#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
						((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
				);
			}

			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	}
}

// Landscape Mixin
// ==========================================================================

@mixin landscape {
	@media screen and (orientation: landscape) {
		@content;
	}
}

// IE11 & Edge Mixins
// ==========================================================================

// IE11
@mixin ie11 {
	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
		@content;
	}
}

// IE11 and Edge
@mixin ie11andedge {
	// stylelint-disable-next-line media-feature-name-no-unknown
	@media screen and (min-device-pixel-ratio: 0) and (-ms-high-contrast: none),
		(-ms-high-contrast: active) {
		@content;
	}
}

// Chrome
@mixin firefox {
	// stylelint-disable-next-line media-feature-name-no-unknown
	@media screen and (min-device-pixel-ratio: 0) and (resolution >= 0.001dpcm) {
		@content;
	}
}

// Safari
@mixin safari {
	@media not all and (resolution >= 0.001dpcm) {
		@supports (-webkit-appearance: none) {
			@content;
		}
	}
}

// Create Media Query
// ==========================================================================

// @author Ainsley Clark
// @param {Number} $breakpoint - Initial breakpoint
@mixin create-mediaquery($breakpoint) {
	@if $breakpoint == 0 {
		@content;
	} @else {
		@media (min-width: $breakpoint * 1px) {
			@content;
		}
	}
}

// Ellipsis
// ==========================================================================

@mixin ellipsis($lines) {
	display: -webkit-box;
	-webkit-line-clamp: $lines;
	-webkit-box-orient: vertical;
	overflow: hidden;
}

// Touch/Non touch
// ==========================================================================

@mixin touch {
	html.touchevents {
		@content;
	}
}

@mixin no-touch {
	html.no-touchevents {
		@content;
	}
}
